name: wdi5 tests

on:
  pull_request:
    branches:
      - main

jobs:
  test-wdi5:
    runs-on: ubuntu-latest
    if: "github.event.pull_request.title != 'chore: release main'"
    strategy:
      fail-fast: false
      matrix:
        scenario: ["ordersv2fe", "ordersv4fe", "ordersv2fenondraft", "ordersv2freestylenondraftopenui5", "ordersv2freestylenondraft"]
        ui5version: [108, 96, 84, 71]
        exclude:
          - scenario: ordersv4fe
            ui5version: 71

    steps:
      - name: update chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get --only-upgrade install google-chrome-stable
          # check chrome version
          google-chrome --version
      - name: install gnome-keyring
        run: sudo apt install gnome-keyring

      - name: checkout excelUpload Repo
        uses: actions/checkout@v3

      - name: use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.0

      - name: use node 16
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      # we need this for workspace mgmt
      - name: check npm version >= 7
        run: npm --version

      - name: update npm
        run: |
          npm i -g npm@latest
          npm --version

      # - name: link excel button
      #   run: |
      #     cd packages/ui5-cc-excelUpload-Button && npm link && cd ../..

      - name: get port
        run: |
          TESTAPPPORT=$(node ./dev/get-port.js ${{ matrix.scenario }} ${{ matrix.ui5version }})
          echo "TESTAPPPORT=$TESTAPPPORT" >> $GITHUB_ENV

      - name: pnpm install
        run: |
          npm pkg delete scripts.prepare
          pnpm install --no-frozen-lockfile --verbose

      - name: copy test apps
        run: npm run copyTestApps

      # - name: pnpm install for test apps
      #   run: |
      #     pnpm install --no-frozen-lockfile --verbose

      - name: Run Build
        run: npm run build

      # update chromedriver
      - name: update chromedriver to latest
        run: |
          npm run updateChromedriver

      - name: install @sap/cds-dk
        run: |
          npm i -g @sap/cds-dk

      # run app
      - name: start cap server
        run: |
          npm run start:server&

      - name: start app ${{ matrix.scenario }} ui5 ${{ matrix.ui5version }}
        run: |
          pnpm --filter ${{ matrix.scenario }}${{ matrix.ui5version }} start:silent&

      # run wdi5 tests
      - name: test wdi5 ${{ matrix.scenario }} ui5 ${{ matrix.ui5version }}
        run: |
          while ! nc -z localhost 4004; do sleep 0.1; done
          while ! nc -z localhost ${{ env.TESTAPPPORT }}; do sleep 0.1; done
          pnpm --filter ui5-cc-excelupload-sample test -- -- --headless ${{ matrix.scenario }} ${{ matrix.ui5version }}
